/**
 * This file was auto-generated by executing "npm run container:build"
 * If you update this file, it will be overwritten.
 * @since 2025-06-06T23:44:10.541Z
 */
import { AppAuthController } from "./core/auth/controllers/app-auth.controller";
import { AppInfoController } from "./core/auth/controllers/app-info.controller";
import { AppAuthService } from "./core/auth/services/app-auth-service";
import { NativeRBACService } from "./core/providers/authorization/rbac/rbac.service";
import { RedisCacheService } from "./core/providers/cache/redis/redis.service";
import { FirestoreHelper } from "./core/providers/database/firestore/firestore.helper";
import { FirestoreService } from "./core/providers/database/firestore/firestore.service";
import { MySqlTransactionHelper } from "./core/providers/database/mysql/mysql-transaction.helper";
import { MySqlService } from "./core/providers/database/mysql/mysql.service";
import { KryptodocIndexerService } from "./core/providers/indexer/kryptodoc/kryptodoc-indexer.service";
import { JsonWebToken } from "./core/providers/jwt/jsonwebtoken/json-web-token.service";
import { MailmanMail } from "./core/providers/mail/mailman/mailman-mail.service";
import { AmazonSNSTopicPublisherService } from "./core/providers/topics/awsns/awsns-topic-publisher.service";
import { Notif8701TopicPublisher } from "./core/providers/topics/notif8701/notif8701-topic-publisher.service";
import { RequesterIdentityFactory } from "./core/requester/requester-identity.factory";
import { RequesterIdentityMiddleware } from "./core/requester/requester-identity.middleware";
import { RequesterTokenService } from "./core/requester/requester-token.service";
import { ProxyRouter } from "./core/router/proxy-router";
import { AWSEnvCredentials } from "./core/services/aws/aws-env-credentials";
import { AmazonS3Service } from "./core/services/aws/s3/aws3.service";
import { AmazonSNSService } from "./core/services/aws/sns/awsns.service";
import { AxiosService } from "./core/services/axios/axios.service";
import { EntityCertifier } from "./core/services/entity-certifier/entity-certifier.service";
import { FirebaseEnvBasedProjectService } from "./core/services/firebase/firebase-env-based-project.service";
import { GoogleUserInfoService } from "./core/services/google/api/google-user-info.service";
import { GoogleReCAPTCHAService } from "./core/services/google/apps/recaptcha.service";
import { MySqlPoolService } from "./core/services/mysql/mysql-pool-service";
import { PermissionTokenValidator } from "./core/services/rbac/permission-token.validator";
import { PermissionManager } from "./core/services/rbac/permissions.manager";
import { ProfileAssertions } from "./identity-authority/profiles/profile.assertions";
import { ProfileRepository } from "./identity-authority/profiles/profile.repository";
import { ProfileCreateService } from "./identity-authority/profiles/services/profile-create.service";
import { UserCreateController } from "./identity-authority/users/controllers/user-create.controller";
import { UserCreateService } from "./identity-authority/users/services/user-create.service";
import { UserGetService } from "./identity-authority/users/services/user-get.service";
import { UserOTPService } from "./identity-authority/users/services/user-otp.service";
import { UserPasswordService } from "./identity-authority/users/services/user-password.service";
import { UserPermissionService } from "./identity-authority/users/services/user-permission.service";
import { UserAssertions } from "./identity-authority/users/user.assertions";
import { UserRepository } from "./identity-authority/users/user.repository";
import { Container } from "inversify";

export const bind = (container: Container) => {
  container.bind(AppAuthController).toSelf();
  container.bind(AppInfoController).toSelf();
  container.bind(AppAuthService).toSelf();
  container.bind(NativeRBACService).toSelf();
  container.bind(RedisCacheService).toSelf();
  container.bind(FirestoreHelper).toSelf();
  container.bind(FirestoreService).toSelf();
  container.bind(MySqlTransactionHelper).toSelf();
  container.bind(MySqlService).toSelf();
  container.bind(KryptodocIndexerService).toSelf();
  container.bind(JsonWebToken).toSelf();
  container.bind(MailmanMail).toSelf();
  container.bind(AmazonSNSTopicPublisherService).toSelf();
  container.bind(Notif8701TopicPublisher).toSelf();
  container.bind(RequesterIdentityFactory).toSelf();
  container.bind(RequesterIdentityMiddleware).toSelf();
  container.bind(RequesterTokenService).toSelf();
  container.bind(ProxyRouter).toSelf();
  container.bind(AWSEnvCredentials).toSelf();
  container.bind(AmazonS3Service).toSelf();
  container.bind(AmazonSNSService).toSelf();
  container.bind(AxiosService).toSelf();
  container.bind(EntityCertifier).toSelf();
  container.bind(FirebaseEnvBasedProjectService).toSelf();
  container.bind(GoogleUserInfoService).toSelf();
  container.bind(GoogleReCAPTCHAService).toSelf();
  container.bind(MySqlPoolService).toSelf();
  container.bind(PermissionTokenValidator).toSelf();
  container.bind(PermissionManager).toSelf();
  container.bind(ProfileAssertions).toSelf();
  container.bind(ProfileRepository).toSelf();
  container.bind(ProfileCreateService).toSelf();
  container.bind(UserCreateController).toSelf();
  container.bind(UserCreateService).toSelf();
  container.bind(UserGetService).toSelf();
  container.bind(UserOTPService).toSelf();
  container.bind(UserPasswordService).toSelf();
  container.bind(UserPermissionService).toSelf();
  container.bind(UserAssertions).toSelf();
  container.bind(UserRepository).toSelf();
}
