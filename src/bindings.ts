/**
 * This file was auto-generated by executing "npm run container:build"
 * If you update this file, it will be overwritten.
 * @since 2025-06-17T21:37:03.227Z
 */
import { AppAuthController } from "./core/auth/controllers/app-auth.controller";
import { AppInfoController } from "./core/auth/controllers/app-info.controller";
import { AppAuthService } from "./core/auth/services/app-auth-service";
import { NativeRBACService } from "./core/providers/authorization/rbac/rbac.service";
import { RedisCacheService } from "./core/providers/cache/redis/redis.service";
import { FirestoreHelper } from "./core/providers/database/firestore/firestore.helper";
import { FirestoreService } from "./core/providers/database/firestore/firestore.service";
import { MySqlTransactionHelper } from "./core/providers/database/mysql/mysql-transaction.helper";
import { MySqlService } from "./core/providers/database/mysql/mysql.service";
import { SimpleNodeEmitter } from "./core/providers/event/node-emitter/node-emitter.service";
import { KryptodocIndexerService } from "./core/providers/indexer/kryptodoc/kryptodoc-indexer.service";
import { JsonWebToken } from "./core/providers/jwt/jsonwebtoken/json-web-token.service";
import { MailmanMail } from "./core/providers/mail/mailman/mailman-mail.service";
import { AmazonSNSTopicPublisherService } from "./core/providers/topics/awsns/awsns-topic-publisher.service";
import { Notif8701TopicPublisher } from "./core/providers/topics/notif8701/notif8701-topic-publisher.service";
import { RequesterIdentityFactory } from "./core/requester/requester-identity.factory";
import { RequesterIdentityMiddleware } from "./core/requester/requester-identity.middleware";
import { RequesterTokenService } from "./core/requester/requester-token.service";
import { ProxyRouter } from "./core/router/proxy-router";
import { AWSEnvCredentials } from "./core/services/aws/aws-env-credentials";
import { AmazonS3Service } from "./core/services/aws/s3/aws3.service";
import { AmazonSNSService } from "./core/services/aws/sns/awsns.service";
import { AxiosService } from "./core/services/axios/axios.service";
import { EntityCertifier } from "./core/services/entity-certifier/entity-certifier.service";
import { NodeEmitterEnvConfig } from "./core/services/events/node-emitter/node-emitter-env-config";
import { NodeEmitterService } from "./core/services/events/node-emitter/node-emitter.service";
import { FirebaseEnvBasedProjectService } from "./core/services/firebase/firebase-env-based-project.service";
import { GoogleUserInfoService } from "./core/services/google/api/google-user-info.service";
import { GoogleReCAPTCHAService } from "./core/services/google/apps/recaptcha.service";
import { MySqlPoolService } from "./core/services/mysql/mysql-pool-service";
import { PermissionTokenValidator } from "./core/services/rbac/permission-token.validator";
import { PermissionManager } from "./core/services/rbac/permissions.manager";
import { UnitOfWorkFactory } from "./core/workflow/unit-of-work.factory";
import { CreateEmailTeamplateCommand } from "./identity-authority/email-templates/commands/create-email-template.command";
import { UpdateEmailTemplateCommand } from "./identity-authority/email-templates/commands/update-email-template.command";
import { EmailTemplateGetController } from "./identity-authority/email-templates/controllers/email-template-get.controller";
import { EmailTemplateRepository } from "./identity-authority/email-templates/email-template.repository";
import { EmailTemplateCreateService } from "./identity-authority/email-templates/services/email-template-create.service";
import { EmailTemplateUpdateService } from "./identity-authority/email-templates/services/email-template-update.service";
import { UploadProfileImagesCommand } from "./identity-authority/profiles/commands/upload-profile-images.command";
import { ProfileImagesController } from "./identity-authority/profiles/controllers/profile-images.controller";
import { ProfileAssertions } from "./identity-authority/profiles/profile.assertions";
import { ProfileRepository } from "./identity-authority/profiles/profile.repository";
import { ProfileCreateService } from "./identity-authority/profiles/services/profile-create.service";
import { ProfileUpdateService } from "./identity-authority/profiles/services/profile-update.service";
import { IAuthRequesterFactory } from "./identity-authority/requester/iauth-requester.factory";
import { ImageHelperService } from "./identity-authority/services/image-helper.service";
import { IAuthImageTokenService } from "./identity-authority/services/image-token.service";
import { IAuthImageUploadService } from "./identity-authority/services/image-upload.service";
import { TeamUsersService } from "./identity-authority/teams/services/team-users.service";
import { TeamRepository } from "./identity-authority/teams/team.repository";
import { TenantUsersRegistry } from "./identity-authority/teams/tenant-users.registry";
import { UserAccessRegistry } from "./identity-authority/teams/user-access.registry";
import { AddTenantUserCommand } from "./identity-authority/tenants/commands/add-tenant-user.command";
import { CertifyTenantAccessCommand } from "./identity-authority/tenants/commands/certify-tenant-access.command";
import { CreateTenantCommand } from "./identity-authority/tenants/commands/create-tenant.command";
import { UpdateTenantCommand } from "./identity-authority/tenants/commands/update-tenant.command";
import { UploadTenantImagesCommand } from "./identity-authority/tenants/commands/upload-tenant-images.command";
import { GetTenantController } from "./identity-authority/tenants/controllers/get-tenant.controller";
import { TenantImagesController } from "./identity-authority/tenants/controllers/tenant-images.controller";
import { UpdateTenantController } from "./identity-authority/tenants/controllers/update-tenant.controller";
import { TenantSnippetIndexer } from "./identity-authority/tenants/event-listeners/tenant-snippet-indexer";
import { TenantAccessCertificationService } from "./identity-authority/tenants/services/tenant-access-certification.service";
import { TenantCreateService } from "./identity-authority/tenants/services/tenant-create.service";
import { TenantImagesService } from "./identity-authority/tenants/services/tenant-images.service";
import { TenantUpdateService } from "./identity-authority/tenants/services/tenant-update.service";
import { TenantRepository } from "./identity-authority/tenants/tenant.repository";
import { UserAccessCommand } from "./identity-authority/users/commands/access-user.command";
import { CreateUserCommand } from "./identity-authority/users/commands/create-user.command";
import { ResendAccountVerificationEmailCommand } from "./identity-authority/users/commands/resend-account-verification-email.command";
import { SendNewEmailConfirmationCommand } from "./identity-authority/users/commands/send-new-email-confirmation.command";
import { SendPasswordResetCommand } from "./identity-authority/users/commands/send-password-reset-email.command";
import { UpdateUserStatusCommand } from "./identity-authority/users/commands/update-user-status.command";
import { UpdateUserCommand } from "./identity-authority/users/commands/update-user.command";
import { UserAccessReportController } from "./identity-authority/users/controllers/user-access-report.controller";
import { UserCreateController } from "./identity-authority/users/controllers/user-create.controller";
import { UserGetController } from "./identity-authority/users/controllers/user-get.controller";
import { UserSendEmailController } from "./identity-authority/users/controllers/user-send-email.controller";
import { UserUpdateController } from "./identity-authority/users/controllers/user-update.controller";
import { AccountVerificationEmailSender } from "./identity-authority/users/event-listeners/send-account-verification-email";
import { UserSnippetIndexer } from "./identity-authority/users/event-listeners/user-snippet-indexer";
import { UserAccessReportService } from "./identity-authority/users/services/user-access-report.service";
import { UserActionTokenService } from "./identity-authority/users/services/user-action-token.service";
import { UserAuthService } from "./identity-authority/users/services/user-auth.service";
import { UserCreateService } from "./identity-authority/users/services/user-create.service";
import { UserEmailSenderService } from "./identity-authority/users/services/user-email-sender.service";
import { UserGetService } from "./identity-authority/users/services/user-get.service";
import { UserOTPService } from "./identity-authority/users/services/user-otp.service";
import { UserPasswordService } from "./identity-authority/users/services/user-password.service";
import { UserPermissionService } from "./identity-authority/users/services/user-permission.service";
import { UserStatusService } from "./identity-authority/users/services/user-status.service";
import { UserUpdateService } from "./identity-authority/users/services/user-update.service";
import { UserAssertions } from "./identity-authority/users/user.assertions";
import { UserRepository } from "./identity-authority/users/user.repository";
import { Container } from "inversify";

export const bind = (container: Container) => {
  container.bind(AppAuthController).toSelf();
  container.bind(AppInfoController).toSelf();
  container.bind(AppAuthService).toSelf();
  container.bind(NativeRBACService).toSelf();
  container.bind(RedisCacheService).toSelf();
  container.bind(FirestoreHelper).toSelf();
  container.bind(FirestoreService).toSelf();
  container.bind(MySqlTransactionHelper).toSelf();
  container.bind(MySqlService).toSelf();
  container.bind(SimpleNodeEmitter).toSelf();
  container.bind(KryptodocIndexerService).toSelf();
  container.bind(JsonWebToken).toSelf();
  container.bind(MailmanMail).toSelf();
  container.bind(AmazonSNSTopicPublisherService).toSelf();
  container.bind(Notif8701TopicPublisher).toSelf();
  container.bind(RequesterIdentityFactory).toSelf();
  container.bind(RequesterIdentityMiddleware).toSelf();
  container.bind(RequesterTokenService).toSelf();
  container.bind(ProxyRouter).toSelf();
  container.bind(AWSEnvCredentials).toSelf();
  container.bind(AmazonS3Service).toSelf();
  container.bind(AmazonSNSService).toSelf();
  container.bind(AxiosService).toSelf();
  container.bind(EntityCertifier).toSelf();
  container.bind(NodeEmitterEnvConfig).toSelf();
  container.bind(NodeEmitterService).toSelf();
  container.bind(FirebaseEnvBasedProjectService).toSelf();
  container.bind(GoogleUserInfoService).toSelf();
  container.bind(GoogleReCAPTCHAService).toSelf();
  container.bind(MySqlPoolService).toSelf();
  container.bind(PermissionTokenValidator).toSelf();
  container.bind(PermissionManager).toSelf();
  container.bind(UnitOfWorkFactory).toSelf();
  container.bind(CreateEmailTeamplateCommand).toSelf();
  container.bind(UpdateEmailTemplateCommand).toSelf();
  container.bind(EmailTemplateGetController).toSelf();
  container.bind(EmailTemplateRepository).toSelf();
  container.bind(EmailTemplateCreateService).toSelf();
  container.bind(EmailTemplateUpdateService).toSelf();
  container.bind(UploadProfileImagesCommand).toSelf();
  container.bind(ProfileImagesController).toSelf();
  container.bind(ProfileAssertions).toSelf();
  container.bind(ProfileRepository).toSelf();
  container.bind(ProfileCreateService).toSelf();
  container.bind(ProfileUpdateService).toSelf();
  container.bind(IAuthRequesterFactory).toSelf();
  container.bind(ImageHelperService).toSelf();
  container.bind(IAuthImageTokenService).toSelf();
  container.bind(IAuthImageUploadService).toSelf();
  container.bind(TeamUsersService).toSelf();
  container.bind(TeamRepository).toSelf();
  container.bind(TenantUsersRegistry).toSelf();
  container.bind(UserAccessRegistry).toSelf();
  container.bind(AddTenantUserCommand).toSelf();
  container.bind(CertifyTenantAccessCommand).toSelf();
  container.bind(CreateTenantCommand).toSelf();
  container.bind(UpdateTenantCommand).toSelf();
  container.bind(UploadTenantImagesCommand).toSelf();
  container.bind(GetTenantController).toSelf();
  container.bind(TenantImagesController).toSelf();
  container.bind(UpdateTenantController).toSelf();
  container.bind(TenantSnippetIndexer).toSelf();
  container.bind(TenantAccessCertificationService).toSelf();
  container.bind(TenantCreateService).toSelf();
  container.bind(TenantImagesService).toSelf();
  container.bind(TenantUpdateService).toSelf();
  container.bind(TenantRepository).toSelf();
  container.bind(UserAccessCommand).toSelf();
  container.bind(CreateUserCommand).toSelf();
  container.bind(ResendAccountVerificationEmailCommand).toSelf();
  container.bind(SendNewEmailConfirmationCommand).toSelf();
  container.bind(SendPasswordResetCommand).toSelf();
  container.bind(UpdateUserStatusCommand).toSelf();
  container.bind(UpdateUserCommand).toSelf();
  container.bind(UserAccessReportController).toSelf();
  container.bind(UserCreateController).toSelf();
  container.bind(UserGetController).toSelf();
  container.bind(UserSendEmailController).toSelf();
  container.bind(UserUpdateController).toSelf();
  container.bind(AccountVerificationEmailSender).toSelf();
  container.bind(UserSnippetIndexer).toSelf();
  container.bind(UserAccessReportService).toSelf();
  container.bind(UserActionTokenService).toSelf();
  container.bind(UserAuthService).toSelf();
  container.bind(UserCreateService).toSelf();
  container.bind(UserEmailSenderService).toSelf();
  container.bind(UserGetService).toSelf();
  container.bind(UserOTPService).toSelf();
  container.bind(UserPasswordService).toSelf();
  container.bind(UserPermissionService).toSelf();
  container.bind(UserStatusService).toSelf();
  container.bind(UserUpdateService).toSelf();
  container.bind(UserAssertions).toSelf();
  container.bind(UserRepository).toSelf();
}
